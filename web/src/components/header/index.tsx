import {useEffect, useRef, useState} from "react";
import {observer} from "mobx-react";

import cn from "@edgedb/common/utils/classNames";

import {useAppState} from "src/state/providers";
import {PageType, Theme} from "src/state/models/app";
import {DatabaseTab} from "src/state/models/database";

import {Logo} from "src/ui/icons/logo";
import {
  HeaderDatabaseIcon,
  HeaderInstanceIcon,
  ThemeSwitcherIcon,
} from "src/ui/icons";
import {Select, SelectProps} from "src/ui/select";

import CreateDatabaseModal from "../modals/createDatabase";

import styles from "./header.module.scss";

export default observer(function Header() {
  const appState = useAppState();

  return (
    <div className={styles.header}>
      <div className={styles.title}>
        <Logo className={styles.logo} />
        <div className={styles.subtitle}>
          <StudioText />
        </div>
      </div>

      <div className={styles.tabs}>
        <Tab
          title={appState.instanceState.instanceName ?? ""}
          icon={<HeaderInstanceIcon />}
          mainAction={
            appState.currentPage
              ? () => appState.setCurrentPageId(PageType.Instance)
              : undefined
          }
          items={null}
        />
        {appState.currentPage ? (
          <>
            <TabSep />
            <Tab
              title={appState.currentPage.name}
              icon={<HeaderDatabaseIcon />}
              selectedItemIndex={appState.instanceState.databases.findIndex(
                (db) => db.name === appState.currentPage!.name
              )}
              items={appState.instanceState.databases.map((db) => ({
                label: db.name,
                action: () => appState.openDatabasePage(db.name),
              }))}
              actions={[
                // {
                //   label: "Database settings",
                //   action: () => {
                //     appState.currentPage!.setCurrentTabId(
                //       DatabaseTab.Settings
                //     );
                //   },
                // },
                {
                  label: "Create new database",
                  action: () => {
                    appState.openModalOverlay(<CreateDatabaseModal />);
                  },
                },
              ]}
            />
          </>
        ) : null}
      </div>
      <div
        className={styles.themeSwitcher}
        style={{marginLeft: "auto"}}
        onClick={() =>
          appState.setTheme(
            appState.theme === Theme.dark ? Theme.light : Theme.dark
          )
        }
      >
        <ThemeSwitcherIcon />
      </div>
    </div>
  );
});

interface TabProps {
  icon: JSX.Element;
}
function Tab({icon, ...selectProps}: TabProps & SelectProps) {
  return (
    <div className={styles.tab}>
      {icon}
      <Select titleClassName={styles.tabTitle} {...selectProps} />
    </div>
  );
}

function TabSep() {
  return (
    <svg
      width="16"
      height="30"
      viewBox="0 0 16 30"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={styles.tabSep}
    >
      <path
        d="M 1,29 L 15,1"
        stroke="#848484"
        strokeWidth={1.5}
        strokeLinecap="round"
      />
    </svg>
  );
}

function StudioText() {
  return (
    <svg
      width="57"
      height="15"
      viewBox="0 0 57 15"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M7.02246 4.18262C7.02246 3.74316 6.84961 3.3916 6.50391 3.12793C6.1582 2.8584 5.66309 2.72363 5.01855 2.72363C4.28027 2.72363 3.75 2.8584 3.42773 3.12793C3.10547 3.39746 2.94434 3.81055 2.94434 4.36719C2.94434 4.80664 3.06152 5.17871 3.2959 5.4834C3.53613 5.78223 3.93457 6.04004 4.49121 6.25684L6.27539 6.95996C7.23047 7.33496 7.93652 7.8125 8.39355 8.39258C8.85645 8.9668 9.08789 9.68457 9.08789 10.5459C9.08789 11.1201 9.00586 11.6328 8.8418 12.084C8.68359 12.5293 8.4375 12.9072 8.10352 13.2178C7.76953 13.5283 7.34766 13.7656 6.83789 13.9297C6.32812 14.0938 5.72461 14.1758 5.02734 14.1758C3.67969 14.1758 2.66602 13.877 1.98633 13.2793C1.30664 12.6758 0.966797 11.7881 0.966797 10.6162V10.335C0.966797 10.2705 0.984375 10.2207 1.01953 10.1855C1.06055 10.1445 1.11328 10.124 1.17773 10.124H2.55762C2.62207 10.124 2.67188 10.1445 2.70703 10.1855C2.74805 10.2207 2.76855 10.2705 2.76855 10.335V10.7129C2.76855 11.8555 3.51855 12.4268 5.01855 12.4268C5.41699 12.4268 5.75977 12.3857 6.04688 12.3037C6.33398 12.2217 6.56836 12.1074 6.75 11.9609C6.9375 11.8086 7.07227 11.624 7.1543 11.4072C7.24219 11.1904 7.28613 10.9502 7.28613 10.6865C7.28613 10.4053 7.25098 10.1592 7.18066 9.94824C7.11035 9.7373 6.99316 9.54688 6.8291 9.37695C6.66504 9.20703 6.44824 9.04883 6.17871 8.90234C5.90918 8.75 5.5752 8.59766 5.17676 8.44531L3.6123 7.83887C2.79199 7.52246 2.17383 7.08008 1.75781 6.51172C1.34766 5.94336 1.14258 5.25195 1.14258 4.4375C1.14258 3.86914 1.22754 3.37109 1.39746 2.94336C1.57324 2.50977 1.8252 2.14941 2.15332 1.8623C2.4873 1.56934 2.89453 1.34961 3.375 1.20312C3.85547 1.05078 4.40625 0.974609 5.02734 0.974609C6.25195 0.974609 7.18945 1.25879 7.83984 1.82715C8.49609 2.39551 8.82422 3.20703 8.82422 4.26172V4.47266C8.82422 4.53711 8.80371 4.58984 8.7627 4.63086C8.72754 4.66602 8.67773 4.68359 8.61328 4.68359H7.2334C7.16895 4.68359 7.11621 4.66602 7.0752 4.63086C7.04004 4.58984 7.02246 4.53711 7.02246 4.47266V4.18262ZM13.4297 14C13.2891 14 13.2188 13.9297 13.2188 13.7891V2.89941H10.6172C10.5527 2.89941 10.5 2.88184 10.459 2.84668C10.4238 2.80566 10.4062 2.75293 10.4062 2.68848V1.36133C10.4062 1.29688 10.4238 1.24707 10.459 1.21191C10.5 1.1709 10.5527 1.15039 10.6172 1.15039H17.6133C17.6777 1.15039 17.7275 1.1709 17.7627 1.21191C17.8037 1.24707 17.8242 1.29688 17.8242 1.36133V2.68848C17.8242 2.75293 17.8037 2.80566 17.7627 2.84668C17.7275 2.88184 17.6777 2.89941 17.6133 2.89941H15.0205V13.7891C15.0205 13.9297 14.9473 14 14.8008 14H13.4297ZM27.3691 1.15039C27.5098 1.15039 27.5801 1.2207 27.5801 1.36133V9.25391C27.5801 10.1152 27.4951 10.8506 27.3252 11.46C27.1553 12.0693 26.9004 12.5703 26.5605 12.9629C26.2266 13.3496 25.8047 13.6338 25.2949 13.8154C24.791 13.9971 24.2051 14.0879 23.5371 14.0879H23.2734C22.6113 14.0879 22.0283 13.9941 21.5244 13.8066C21.0205 13.6191 20.5986 13.3291 20.2588 12.9365C19.9189 12.5439 19.6611 12.043 19.4854 11.4336C19.3154 10.8242 19.2305 10.0977 19.2305 9.25391V1.36133C19.2305 1.2207 19.3008 1.15039 19.4414 1.15039H20.8213C20.9619 1.15039 21.0322 1.2207 21.0322 1.36133V9.20996C21.0322 9.7373 21.0703 10.1973 21.1465 10.5898C21.2285 10.9824 21.3574 11.3076 21.5332 11.5654C21.709 11.8232 21.9375 12.0166 22.2188 12.1455C22.5059 12.2744 22.8574 12.3389 23.2734 12.3389H23.5371C23.9707 12.3389 24.3311 12.2803 24.6182 12.1631C24.9053 12.04 25.1338 11.8525 25.3037 11.6006C25.4795 11.3428 25.6025 11.0176 25.6729 10.625C25.7432 10.2324 25.7783 9.76074 25.7783 9.20996V1.36133C25.7783 1.2207 25.8486 1.15039 25.9893 1.15039H27.3691ZM30.3398 14C30.2754 14 30.2227 13.9824 30.1816 13.9473C30.1465 13.9062 30.1289 13.8535 30.1289 13.7891V1.36133C30.1289 1.29688 30.1465 1.24707 30.1816 1.21191C30.2227 1.1709 30.2754 1.15039 30.3398 1.15039H34.5498C35.6924 1.15039 36.5361 1.43164 37.0811 1.99414C37.6318 2.55664 37.9072 3.42969 37.9072 4.61328V10.6162C37.9072 11.7588 37.6318 12.6084 37.0811 13.165C36.5303 13.7217 35.6865 14 34.5498 14H30.3398ZM36.1055 10.4756V4.70996C36.1055 4.3584 36.0791 4.06836 36.0264 3.83984C35.9736 3.60547 35.8828 3.4209 35.7539 3.28613C35.625 3.14551 35.4521 3.0459 35.2354 2.9873C35.0244 2.92871 34.7578 2.89941 34.4355 2.89941H31.9307V12.251H34.4355C34.7578 12.251 35.0244 12.2246 35.2354 12.1719C35.4521 12.1133 35.625 12.0166 35.7539 11.8818C35.8828 11.7412 35.9736 11.5566 36.0264 11.3281C36.0791 11.0996 36.1055 10.8154 36.1055 10.4756ZM40.2363 2.89941C40.1719 2.89941 40.1191 2.88184 40.0781 2.84668C40.043 2.80566 40.0254 2.75293 40.0254 2.68848V1.36133C40.0254 1.29688 40.043 1.24707 40.0781 1.21191C40.1191 1.1709 40.1719 1.15039 40.2363 1.15039H46.3535C46.418 1.15039 46.4678 1.1709 46.5029 1.21191C46.5439 1.24707 46.5645 1.29688 46.5645 1.36133V2.68848C46.5645 2.75293 46.5439 2.80566 46.5029 2.84668C46.4678 2.88184 46.418 2.89941 46.3535 2.89941H44.2002V12.251H46.3535C46.418 12.251 46.4678 12.2715 46.5029 12.3125C46.5439 12.3477 46.5645 12.3975 46.5645 12.4619V13.7891C46.5645 13.8535 46.5439 13.9062 46.5029 13.9473C46.4678 13.9824 46.418 14 46.3535 14H40.2363C40.1719 14 40.1191 13.9824 40.0781 13.9473C40.043 13.9062 40.0254 13.8535 40.0254 13.7891V12.4619C40.0254 12.3975 40.043 12.3477 40.0781 12.3125C40.1191 12.2715 40.1719 12.251 40.2363 12.251H42.3984V2.89941H40.2363ZM48.498 4.61328C48.498 3.43555 48.8467 2.53613 49.5439 1.91504C50.2412 1.28809 51.2607 0.974609 52.6025 0.974609C53.2354 0.974609 53.8008 1.05371 54.2988 1.21191C54.7969 1.37012 55.2158 1.60449 55.5557 1.91504C55.9014 2.21973 56.165 2.60059 56.3467 3.05762C56.5283 3.50879 56.6191 4.02734 56.6191 4.61328V10.6162C56.6191 11.1904 56.5283 11.7002 56.3467 12.1455C56.1709 12.585 55.9102 12.957 55.5645 13.2617C55.2246 13.5605 54.8057 13.7891 54.3076 13.9473C53.8096 14.0996 53.2412 14.1758 52.6025 14.1758C51.2607 14.1758 50.2412 13.8711 49.5439 13.2617C48.8467 12.6465 48.498 11.7646 48.498 10.6162V4.61328ZM50.2998 10.335C50.2998 10.7217 50.3408 11.0498 50.4229 11.3193C50.5049 11.583 50.6367 11.7969 50.8184 11.9609C51 12.125 51.2373 12.2451 51.5303 12.3213C51.8232 12.3916 52.1807 12.4268 52.6025 12.4268C53.0127 12.4268 53.3584 12.3916 53.6396 12.3213C53.9209 12.2451 54.1494 12.125 54.3252 11.9609C54.501 11.7969 54.627 11.583 54.7031 11.3193C54.7793 11.0498 54.8174 10.7217 54.8174 10.335V4.93848C54.8174 4.52832 54.7764 4.18262 54.6943 3.90137C54.6182 3.62012 54.4922 3.3916 54.3164 3.21582C54.1406 3.04004 53.9121 2.91406 53.6309 2.83789C53.3496 2.76172 53.0068 2.72363 52.6025 2.72363C52.1807 2.72363 51.8232 2.76172 51.5303 2.83789C51.2432 2.91406 51.0059 3.04004 50.8184 3.21582C50.6367 3.3916 50.5049 3.62012 50.4229 3.90137C50.3408 4.18262 50.2998 4.52832 50.2998 4.93848V10.335Z"
        fill="currentColor"
      />
    </svg>
  );
}
